{
  "_args": [
    [
      "mw-file-transfer@git+ssh://git@github.com/LambdaScrum/dps_node-mw-file-transfer.git",
      "/Users/altair/Work/1.4.0.16050/dps_utility/release/dps_digitalpaperapp-pc"
    ]
  ],
  "_from": "git+ssh://git@github.com/LambdaScrum/dps_node-mw-file-transfer.git",
  "_id": "mw-file-transfer@0.11.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/mw-file-transfer",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/LambdaScrum/dps_node-mw-file-transfer/master/package.json",
      "gitUrl": "git://github.com/LambdaScrum/dps_node-mw-file-transfer.git",
      "httpsUrl": "git+https://github.com/LambdaScrum/dps_node-mw-file-transfer.git",
      "shortcut": "github:LambdaScrum/dps_node-mw-file-transfer",
      "ssh": "git@github.com:LambdaScrum/dps_node-mw-file-transfer.git",
      "sshUrl": "git+ssh://git@github.com/LambdaScrum/dps_node-mw-file-transfer.git",
      "type": "github"
    },
    "name": "mw-file-transfer",
    "raw": "mw-file-transfer@git+ssh://git@github.com/LambdaScrum/dps_node-mw-file-transfer.git",
    "rawSpec": "git+ssh://git@github.com/LambdaScrum/dps_node-mw-file-transfer.git",
    "scope": null,
    "spec": "git+ssh://git@github.com/LambdaScrum/dps_node-mw-file-transfer.git",
    "type": "hosted"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git+ssh://git@github.com/LambdaScrum/dps_node-mw-file-transfer.git#b94c3361cb9c316d79a12ef571697ccff17df09d",
  "_shasum": "088805465b7bee2c636c6435ed5175cc77048df1",
  "_shrinkwrap": null,
  "_spec": "mw-file-transfer@git+ssh://git@github.com/LambdaScrum/dps_node-mw-file-transfer.git",
  "_where": "/Users/altair/Work/1.4.0.16050/dps_utility/release/dps_digitalpaperapp-pc",
  "author": "",
  "dependencies": {
    "btoa": "^1.1.2",
    "debug": "^2.2.0",
    "mw-error": "git+ssh://git@github.com/LambdaScrum/dps_node-mw-error.git"
  },
  "description": "MilkyWay File Transfer (mw-file-transfer) ====================",
  "devDependencies": {},
  "gitHead": "b94c3361cb9c316d79a12ef571697ccff17df09d",
  "license": "SEE LICENSE IN LICENSE",
  "main": "filetransferqueue.js",
  "name": "mw-file-transfer",
  "optionalDependencies": {},
  "readme": "MilkyWay File Transfer (mw-file-transfer)\n====================\n\nAltairとDeneb間のFile転送の通信プロトコルをカプセル化する\n\n* Backbone単独で扱える処理は基本行わない。\n\nModule Functions\n--------------------\n\n* Documentのダウンロードとアップロード\n  * 転送先フォルダの作成\n    * 空のフォルダは転送しない\n    * 転送先フォルダ名の重複チェックはしない\n    * 転送先フォルダが既に存在した場合には、そのフォルダに転送する\n  * 転送先ファイル名重複時のリネーム\n  * 転送時の通信エラー発生によるリトライ\n  * 転送時のAuthエラー発生の際にReauth\n  \n* Sync専用のDocumentのダウンロードとアップロード\n  * 既存のファイルの上書きアップロード\n    * リモート側の上書き対象が変更されていないかをチェックするプロトコルに対応。\n  * 既存のファイルの上書きダウンロード\n    * 直接上書きダウンロードの機能は提供せず、上書きダウンロードのため\n      に指定されたパスにファイルをダウンロードするのみとしている。\n        \t\n* NoteTemplateのアップロード\n* Cert(Wi-Fi用)ファイルのローカルでの読み込み\n* Firmwareのアップロード\n\nModule API\n--------------------\n\n* [Interface](doc/interface.md)\n\nModule Main Dependencies\n--------------------\n\n* [dependencies](doc/dependencies.md)\n\nModule Note\n--------------------\n\n主に、ElectronのRenderer上のXHRとnode.fsの組み合わせで、ファイル転送す\nるために、転送は分割で行う事となっている。\n\n分割して転送する処理を隠蔽して利用方法をシンプルにする目的で、後からこ\nのnode moduleを起こした。\n\n",
  "readmeFilename": "README.md",
  "scripts": {
    "doc": "jsdoc2md *.js > doc/interface.md",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.11.0"
}
